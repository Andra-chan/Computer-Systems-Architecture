     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      
    14 00000000 6162636D6E                  s db 'a', 'b', 'c', 'm', 'n'    ; declararea sirului initial s
    15                                      len equ $-s                     ; stabilirea lungimii sirului initial len
    16 00000005 00<rept>                    d times len db 0                  ; rezervarea unui spatiu de dimensiune len pentru sirul destinatie d si intializarea acestuia
    17                                      
    18                                  ; Se da un sir de caractere format din litere mici.
    19                                  ; Sa se transforme acest sir in sirul literelor mari corespunzator.
    20                                  segment code use32 class=code
    21                                      start:
    22                                          
    23 00000000 B905000000                      mov ecx, len        ;ecx = len(lungimea sirului initial s = 5)
    24 00000005 E318                            jecxz sfarsit
    25 00000007 BE00000000                      mov esi, 0          ; i = 0
    26                                      repeta:
    27                                              ; citesc s[i]
    28 0000000C 8A86[00000000]                      mov al, [s+esi]
    29                                              
    30                                              ; transform in litera mare corespunzatoare
    31 00000012 B320                                mov bl, 'a' - 'A'
    32 00000014 28D8                                sub al, bl
    33                                              
    34                                              ; pun in d[i]
    35 00000016 8886[05000000]                      mov [d+esi], al 
    36                                              
    37                                                     
    38 0000001C 46                                  inc esi         ;i = i + 1
    39                                   
    40 0000001D E2ED                            loop repeta
    41                                          
    42                                          
    43                                      sfarsit:
    44                                          
    45                                          
    46                                      
    47                                          ; exit(0)
    48 0000001F 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    49 00000021 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
