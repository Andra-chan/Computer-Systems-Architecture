     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 61636465666768              s db 'acdefgh'
    14                                      len equ $-s
    15 00000007 00<rept>                    d times len db 0
    16                                  
    17                                  ; our code starts here
    18                                  segment code use32 class=code
    19                                      start:
    20 00000000 B907000000                      mov ecx, len
    21 00000005 E30F                            jecxz final
    22                                          ; directia de parcurgere
    23 00000007 FC                              cld             ; DF = 0 (std face df = 1)
    24                                          ; incarcam registrii index
    25 00000008 BE[00000000]                    mov esi, s      ; ESI = offset variabilei s
    26 0000000D BF[07000000]                    mov edi, d      ; EDI = offset variabilei d   
    27                                          
    28                                      repeta:
    29 00000012 AC                              lodsb           ; AL = s[i] + inc ESI 
    30 00000013 AA                              stosb           ; d[j] = AL + inc EDI (daca DF = 0)
    31 00000014 E2FC                            loop repeta
    32                                          
    33                                      final:
    34                                          ; exit(0)
    35 00000016 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    36 00000018 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
